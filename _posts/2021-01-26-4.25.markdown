---
layout: post
title:  "22. D3D 프레임워크 만들기"
date:   2021-05-04 01:09:01 +0900
categories: jekyll update
---
#### Table of Contents
1.　[**Effect를 통해 shader로 변수넘겨주기**](#1effect를-통해-shader로-변수넘겨주기)<br><br />
2.　[**미리 컴파일된 쉐이더(.cso , .fxo) 컴파일하기**](#2-미리-컴파일된-쉐이더cso--fxo-컴파일하기)<br /><br />
<br />
<br />
**<span style="color:red"></span>**

### **1.Effect를 통해 shader로 변수넘겨주기**
- BoneTransform  = ID3DX11Effect->GetVariableByName("쉐이더에서 사용할 변수명")->AsMatrix(); => 쉐이더 리소스 뷰로 넘겨줄 변수설정 함수<br><br>
- 쉐이더에서 설정한 변수명으로 해당 변수를 사용할 수 있게 된다.<br><br>
- BoneTransform, 오브젝트의 월드좌표, view와 projection 행렬 등을 넘겨주어 버텍스쉐이더에서 연산하여 CPU부하를 줄인다.
<br><br><br><br><br><br>


### **2. 미리 컴파일된 쉐이더(.cso , .fxo) 컴파일하기**
- fx파일이나 hlsl 파일을 사용하여 프로그램을 구성하려면 항상 해당 파일이 로딩될때마다 컴파일되어야하는 불편함이있다.<br><br>
- 위의 방식으로는 항상 fx파일이나 hlsl파일이 프로그램에 붙어야하므로 배포받은 사용자가 손쉽게 수정가능하다는 단점 또한 있다<br><br>
- **<span style="color:red">미리 컴파일된 쉐이더를 사용함으로써 위의 문제들을 해결할 수 있다</span>**.<br><br>

```
1. fx 명령어를 명령프롬프트(cmd)에서 사용할 수 있도록 directX폴더 내부
   Utilites/bin/64/fxc.exe파일을 C\windows\System32 내부에 복사한다.

2. 명령 프롬프트를 켜서 fx 파일이 있는 곳으로 이동한 뒤 fxc 매서드를 실행

3. fxc /T fx_5_0 /Fo VertexShader.fxo VertexShder.fx (사용 예시)

4. /T 옵션은 컴파일할 쉐이더 버전, /Fo 옵션은 생성할 파일 이름, 컴파일할    
   쉐이더 이름 이다
```
<br><br>

- 컴파일 옵션 Syntax 종류
    - Compute shader : cs_5_0 등 (버전 별로 해당 기능 참조)
    - Vertext shader : vs_5_0 등
    - Pixel shader : ps_5_0
    - Geometry Shader : gs_4_0
    - Domain Shader	: ds_5_0
    - Hull Shader : hs_5_0
    - Root Signature : rootsig_1_0


<br><br><br><br><br><br>


### **3. 깃 리셋 (Git Reset) 사용하기**
- Git Reset은 이전의 커밋내용으로 돌아갈 수 있다
- git reset --옵션 <돌아갈 커밋 번호> 로 사용한다.
- 옵션은 --soft, --mixed, --hard 가 있다.
- hard는 모든 내용과 파일을 삭제하고 원하는 커밋 상태로 돌아간다
- mixed는 내용을 유지한채 원하는 커밋 위치로 돌아간다
- soft는 커밋만 돌아가고 모든 변경 사항을 남긴다
  
주의점
```
1. visual studio가 열린 상태에서는 reset이 실패할 수 있다. 
   visual studio가 커밋내용진행중 내용을 바꿀수 있기 때문이다

2. git cmd를 관리자 모드로 실행시켜야 한다.

```
<br><br><br><br><br><br>

